{"version":3,"sources":["modules/clock.js","modules/index.js","styles/global.js","components/AnalogClock.js","App.js","index.js"],"names":["SET_TIME","now","Date","initialState","hours","getHours","minutes","getMinutes","seconds","getSeconds","clock","state","action","type","rootReducer","combineReducers","GlobalStyle","createGlobalStyle","ToolTip","styled","div","ClockFace","Mark","angle","Hand","attrs","style","transform","HoursHand","MinutesHand","SecondsHand","AnalogClock","setCurrentTime","useState","showTooltip","setShowTooltip","tooltipRef","useRef","useEffect","interval","setInterval","clearInterval","onMouseHover","timeFormat","n","onMouseEnter","onMouseLeave","onMouseMove","e","currentTargetRect","currentTarget","getBoundingClientRect","offsetX","pageX","left","offsetY","pageY","top","current","Array","from","length","map","_","i","ref","App","useSelector","dispatch","useDispatch","useCallback","setTime","Container","React","memo","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebdc1461.chunk.js","sourcesContent":["const SET_TIME = 'clock/SET_TIME';\n\nexport const setTime = (hours, minutes, seconds) => {\n  return {\n    type: SET_TIME,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n  };\n};\n\nconst now = new Date();\n\nconst initialState = {\n  hours: now.getHours(),\n  minutes: now.getMinutes(),\n  seconds: now.getSeconds(),\n};\n\nfunction clock(state = initialState, action) {\n  switch (action.type) {\n    case SET_TIME:\n      return {\n        hours: action.hours,\n        minutes: action.minutes,\n        seconds: action.seconds,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default clock;\n","import { combineReducers } from 'redux';\nimport clock from './clock';\n\nconst rootReducer = combineReducers({\n  clock,\n});\n\nexport default rootReducer;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  body {\n    background-color: #eee;\n  }\n`;\n\nexport default GlobalStyle;\n","import { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nfunction AnalogClock({ hours, minutes, seconds, setCurrentTime }) {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const tooltipRef = useRef();\n\n  useEffect(() => {\n    const interval = setInterval(setCurrentTime, 1000);\n    return () => clearInterval(interval);\n  }, [setCurrentTime]);\n\n  const onMouseHover = () => {\n    setShowTooltip(!showTooltip);\n  };\n\n  const onMouseMove = (e) => {\n    if (!showTooltip) return;\n\n    const currentTargetRect = e.currentTarget.getBoundingClientRect();\n    const offsetX = e.pageX - currentTargetRect.left;\n    const offsetY = e.pageY - currentTargetRect.top;\n\n    tooltipRef.current.style.left = `${offsetX}px`;\n    tooltipRef.current.style.top = `${offsetY - 40}px`;\n  };\n\n  const timeFormat = (n) => (n < 10 ? `0${n}` : `${n}`);\n\n  return (\n    <ClockFace\n      onMouseEnter={onMouseHover}\n      onMouseLeave={onMouseHover}\n      onMouseMove={onMouseMove}\n    >\n      {Array.from({ length: 60 }).map((_, i) => (\n        <Mark key={i} angle={6 * i} />\n      ))}\n      <HoursHand angle={30 * hours + 0.5 * minutes} />\n      <MinutesHand angle={6 * minutes} />\n      <SecondsHand angle={6 * seconds} />\n      {showTooltip && (\n        <ToolTip ref={tooltipRef}>\n          {timeFormat(hours)}시 {timeFormat(minutes)}분 {timeFormat(seconds)}초\n        </ToolTip>\n      )}\n    </ClockFace>\n  );\n}\n\nconst ToolTip = styled.div`\n  position: absolute;\n  padding: 5px 10px;\n  border: 1px solid transparent;\n  color: #fff;\n  background-color: #222;\n  opacity: 0.8;\n  white-space: nowrap;\n  z-index: 999;\n`;\n\nconst ClockFace = styled.div`\n  position: relative;\n  min-width: 500px;\n  min-height: 500px;\n  border: 10px solid black;\n  border-radius: 50%;\n  background-color: #fff;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: black;\n  }\n`;\n\nconst Mark = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  transform: ${({ angle }) => `rotate(${angle}deg)`};\n\n  &::before {\n    content: '';\n    margin-top: 10px;\n    width: ${({ angle }) => (angle % 30 === 0 ? '6px' : '2px')};\n    height: ${({ angle }) => (angle % 30 === 0 ? '20px' : '12px')};\n    background-color: black;\n  }\n\n  &::after {\n    content: ${({ angle }) => `'${(angle === 0 ? 360 : angle) / 30}'`};\n    display: ${({ angle }) => (angle % 30 === 0 ? 'block' : 'none')};\n    font-size: 36px;\n    font-weight: 600;\n    transform: ${({ angle }) => `rotate(${-angle}deg)`};\n  }\n`;\n\nconst Hand = styled.div.attrs(({ angle }) => ({\n  style: {\n    transform: `translate(-50%, 20%) rotate(${angle}deg)`,\n  },\n}))`\n  position: absolute;\n  bottom: 50%;\n  left: 50%;\n  transform-origin: 50% 80%;\n`;\n\nconst HoursHand = styled(Hand)`\n  width: 8px;\n  height: 140px;\n  background-color: black;\n`;\n\nconst MinutesHand = styled(Hand)`\n  width: 6px;\n  height: 220px;\n  background-color: black;\n`;\n\nconst SecondsHand = styled(Hand)`\n  width: 2px;\n  height: 240px;\n  background-color: red;\n`;\n\nexport default AnalogClock;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setTime } from './modules/clock';\nimport GlobalStyle from './styles/global';\nimport AnalogClock from './components/AnalogClock';\n\nfunction App() {\n  const clock = useSelector((state) => state.clock);\n  const dispatch = useDispatch();\n\n  const setCurrentTime = useCallback(() => {\n    const now = new Date();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const seconds = now.getSeconds();\n\n    dispatch(setTime(hours, minutes, seconds));\n  }, [dispatch]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <AnalogClock\n          hours={clock.hours}\n          minutes={clock.minutes}\n          seconds={clock.seconds}\n          setCurrentTime={setCurrentTime}\n        />\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './modules';\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}